{% extends 'layout.twig' %}

{% block content %}
    <div class="title-container">
        <h2>請求書作成</h2>
    </div>
    <form action="/invoices" method="post" class="form-container">
        <div class="form-group">
            <label for="customer" class="customer-label">顧客</label>
            <span id="customer-name"></span>
            <button type="button" class="btn customer-button" id="openModal">顧客入力</button>
            <input type="hidden" id="customer_id" name="customer_id">

        </div>

        <div class="form-group">
            <label for="invoice_date">請求日</label>
            <input type="date" id="invoice_date" name="invoice_date" required>
        </div>

        <div class="form-group">
            <label for="due_date">支払期限</label>
            <input type="date" id="due_date" name="due_date" required>
        </div>

        <div class="form-group">
            <label for="total_amount">合計金額</label>
            <input type="number" step="0.01" id="total_amount" name="total_amount" required>
        </div>

        <div class="button-group">
            <a href="/invoices" class="btn btn-cancel">戻る</a>
            <button type="submit" class="btn btn-create">保存</button>
        </div>
    </form>

    <!-- モーダル本体 -->
    <div id="modal" class="modal hidden" role="dialog" aria-modal="true" aria-hidden="true">
        <div class="modal-content">
            <button id="closeModal" class="modal-close" aria-label="モーダルを閉じる">&times;</button>
            <h3>顧客情報検索</h3>

            <div class="search-box">
                <input type="text" id="customer-search-input" placeholder="顧客名または会社名を入力">
                <button id="searchCustomerBtn">検索</button>
            </div>

            <div id="customer-results" class="customer-results">
                <!-- 顧客情報がここに表示されます -->
            </div>
        </div>
    </div>

    <script>
        // モーダル処理
        document.addEventListener('DOMContentLoaded', () => {
            const modal = document.getElementById('modal');
            const openBtn = document.getElementById('openModal');
            const closeBtn = document.getElementById('closeModal');
            const searchBtn = document.getElementById('searchCustomerBtn');
            const resultBox = document.getElementById('customer-results');
            const searchInput = document.getElementById('customer-search-input');

            function openModal() {
                modal.classList.remove('hidden');
                modal.setAttribute('aria-hidden', 'false');
                searchInput.focus();
                document.body.style.overflow = 'hidden';
            }

            function closeModal() {
                modal.classList.add('hidden');
                modal.setAttribute('aria-hidden', 'true');
                openBtn.focus();
                document.body.style.overflow = '';
            }

            openBtn.addEventListener('click', openModal);
            closeBtn.addEventListener('click', closeModal);
            modal.addEventListener('click', (e) => {
                if (e.target === modal)
                    closeModal();
            });

            document.addEventListener('keydown', (e) => {
                if (e.key === 'Escape' && !modal.classList.contains('hidden')) {
                    closeModal();
                }
            });

            // 検索ボタン押下時の処理
            searchBtn.addEventListener('click', async () => {
                const keyword = searchInput.value.trim();
                if (!keyword) {
                    resultBox.innerHTML = '<p>検索ワードを入力してください。</p>';
                    return;
                }

                try {
                    const response = await fetch(`/api/customers/search?keyword=${encodeURIComponent(keyword)}`);
                    if (!response.ok)
                        throw new Error('Network error');

                    const customers = await response.json();

                    if (customers.length === 0) {
                        resultBox.innerHTML = '<p>該当する顧客が見つかりませんでした。</p>';
                    } else {
                        resultBox.innerHTML = customers.map(c =>
                                `<div class="customer-item" data-id="${c.id}" data-name="${c.contact_name}(${c.company_name})">${c.contact_name}（${c.company_name}）</div>`
                        ).join('');
                    }

                } catch (error) {
                    console.error('Fetch failed', error);
                    resultBox.innerHTML = '<p>エラーが発生しました。</p>';
                }
            });
            // 顧客を選択したときの処理
            resultBox.addEventListener('click', (event) => {
                const item = event.target.closest('.customer-item');
                if (!item)
                    return;

                const customerId = item.dataset.id;
                const customerName = item.dataset.name;

                // hidden項目と表示を更新
                document.getElementById('customer_id').value = customerId;
                document.getElementById('customer-name').textContent = customerName;

                // モーダルを閉じる
                closeModal();
            });
        });
    </script>


{% endblock %}